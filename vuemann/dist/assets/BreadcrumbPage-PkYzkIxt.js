import{g as c,c as p,a,l,b as t,d as n,w as o,F as b,r as f,n as h,o as g,p as v}from"./index-CFtw_ocM.js";import{_ as u}from"./CodeHtmlComponent-DrC0t-WB.js";const q={class:"my-10"},C={class:"breadcrumb-exemple"},k={__name:"BreadcrumbPage",setup(y){const r=c(),d=()=>{const s=h.get().length+1;r.value.add({label:`Page ${s}`,route:"components.breadcrumb"})},i=()=>{r.value.refresh()};return(s,e)=>{const m=f("router-link");return g(),p(b,null,[e[6]||(e[6]=a("h1",{class:"h1"}," File d'ariane ",-1)),a("p",q,[e[1]||(e[1]=n(" Ce component permet d'afficher facilement un file d'ariane. Vous avez deux possibilités pour l'utiliser. Soit via le fichier ",-1)),t(m,{to:{name:"config"},class:"underline link-underline"},{default:o(()=>[...e[0]||(e[0]=[n("fichiers de configuration",-1)])]),_:1}),e[2]||(e[2]=n(" soit de mannière dynamique. ",-1))]),e[7]||(e[7]=l('<h2 class="h2">Type config</h2><p> En ajoutant la clé <span class="badge-code">breadcrumb</span> dans les métas d&#39;une route, vous pouvez facilement configurer votre file d&#39;ariane. Vuemann remontrat l&#39;arborescence de la route. La clé <span class="badge-code">breadcrumb</span> des pages parentes doivent contenir deux informations, <span class="badge-code">name</span> (le nom à afficher dans le file) et <span class="badge-code">route</span> (la route à utiliser pour le lien). Si il sagit d&#39;une page sans enfant, juste l&#39;attribut <span class="badge-code">name</span> est utilisé. </p><h3 class="h3">configuration par arborescence</h3><div class="div-code"> {<br>  path: &quot;/components&quot;,<br>  meta: {<br>   breadcrumb : { name : &#39;Components&#39;, route : &#39;components&#39; }<br>  },<br>  children: [<br>   {<br>    path: &quot;&quot;,<br>    name: &quot;components&quot;,<br>    component : ComponentsPageComponent,<br>   },<br>   {<br>    path: &quot;breadcrumb&quot;,<br>    name: &quot;components.breadcrumb&quot;,<br>    component: BreadcrumbPageComponent,<br>    meta: {<br>     breadcrumb : { name : &quot;File d&#39;ariane&quot; }<br>    },<br>   },<br>   {<br>    path: &quot;code-html&quot;,<br>    name: &quot;components.code&quot;,<br>    component: CodeHtmlPageComponent,<br>    meta: {<br>     breadcrumb : { name : &#39;Code Html&#39; }<br>    },<br>   },<br>  ]<br> } </div><p> Dans l&#39;exemple ci-dessus, vous pouvez voir que l&#39;option breadcrumb pour les routes <span class="badge-code">components.breadcrumb</span> et <span class="badge-code">components.code</span> ne comporte que l&#39;attribut nom. </p><p><i class="fa-solid fa-triangle-exclamation color-danger mr-5"></i> la configuration pour la route avec le path <span class="badge-code">&quot;/components&quot;</span> au même niveau et non dans la route enfant avec le path <span class="badge-code">&quot;&quot;</span><i class="fa-solid fa-triangle-exclamation color-danger ml-5"></i></p><h3 class="h3">configuration parents</h3><p> Vous pouvez si le file d&#39;ariane ne doit pas suivre l&#39;orborescance du fichier <span class="badge-code">route-config</span>, vous pouvez spécifier les routes à utiliser. </p><div class="div-code"> {<br>  path: &quot;/components&quot;,<br>  name: &quot;components&quot;,<br>  component : ComponentsPageComponent,<br>  meta: {<br>   breadcrumb : { <br>    label : &#39;Components&#39; <br>    parents : [<br>     { label: &#39;parent_1&#39;, route : &#39;parent1&#39; }<br>     { label: &#39;parent_1&#39;, route : &#39;parent2&#39; }<br>    ] <br>   }<br>  },<br> } </div><h3 class="h3">Code</h3>',10)),t(u,{class:"my-15"},{default:o(()=>[...e[3]||(e[3]=[a("scriptBalise",null,' import CodeHtml from "@brugmann/vuemann/src/components/breadcrumb/BreadcrumbComponent.vue" ',-1),a("template",null,[a("Breadcrumb")],-1)])]),_:1}),e[8]||(e[8]=l('<h2 class="h2">Type Session</h2><p class="mb-10"> Dans certain cas, le fichier de configuration ne sera pas suffisant pour afficher les pages souhaitées, notamment pour les pages récursives. En passant le paramètre <span class="badge-code">type=&quot;session&quot;</span> vous aurez accès à des méthodes pour manipuler dynamiquement votre file d&#39;ariane. </p><h3 class="h3">Méthodes</h3><h4 class="h4"><i class="fa-solid fa-diamond mr-5"></i>add</h4><p> Permet d&#39;ajouter un lien au file d&#39;ariane. </p><table class="t-default"><thead><tr><th>Nom</th><th>Type</th><th>Required</th><th>Description</th></tr></thead><tbody><tr><td>link</td><td>Object</td><th>Required</th><td> objet route <span class="badge-code"> {name: label dans le file , route: nom de la route, params: paramètre de la route si présent}</span></td></tr><tr><td>routeName</td><td>String</td><td>-</td><td> Si présent, mettra à jour le sessionStorage </td></tr></tbody></table><h4 class="h4"><i class="fa-solid fa-diamond mr-5"></i>refresh</h4><p> Permet de loader la session storage pour rafraichir le rendu html. </p><h3 class="h3">Exemple</h3>',9)),a("div",C,[t(v,{onBreadcrumbClick:i,type:"session",ref_key:"breadcrumb",ref:r},null,512)]),a("div",{class:"d-flex a-center g-15"},[a("button",{class:"btn btn-primary",onClick:d}," Ajouter un lien "),e[4]||(e[4]=a("p",null," Cliquez sur un lien du file d'ariane pour simuler une navigation. ",-1))]),e[9]||(e[9]=a("h3",{class:"h3"},"Code",-1)),t(u,{class:"my-15"},{default:o(()=>[e[5]||(e[5]=a("scriptBalise",null,` import CodeHtml from "@brugmann/vuemann/src/components/breadcrumb/BreadcrumbComponent.vue" \\n const breadcrumb = ref() \\n \\n //utilisation des méthodes \\n breadcrumb.value.add({name:'Page Breadcrumb', route: 'components.breadcrumb'}) \\n breadcrumb.value.refresh() `,-1)),a("template",null,[a("Breadcrumb",{ref_key:"breadcrumb",ref:r},null,512)])]),_:1})],64)}}};export{k as default};
