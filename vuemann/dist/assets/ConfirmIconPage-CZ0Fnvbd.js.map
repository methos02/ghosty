{"version":3,"file":"ConfirmIconPage-CZ0Fnvbd.js","sources":["../../src/components/ConfirmIconComponent.vue","../../src/views/componentsPage/ConfirmIconPage.vue"],"sourcesContent":["<script setup>\r\nimport {ref, onMounted} from \"vue\";\r\nimport DialogComponent from \"@brugmann/vuemann/src/components/DialogComponent.vue\";\r\nimport { flash, t } from \"@brugmann/vuemann/src/services/services-helper.js\";\r\n\r\nconst props = defineProps({\r\n  icon : { type: String, default: ''},\r\n  text : { type: String, default: ''},\r\n  cb : { type: Function, required: true},\r\n  params : { type: Array, default: []},\r\n  question : { type: String, default: '' }\r\n})\r\n\r\nonMounted(() => {\r\n  if(props.text !== '' && props.icon !== '') { flash.error('ConfirmIconComponent: text and icon cannot be used together'); }\r\n})\r\n\r\nconst dialog = ref()\r\nconst state = ref('init')\r\n\r\nconst runCallBack = async () => {\r\n  if(props.question !== '') { dialog.value.close() }\r\n  \r\n  state.value = 'loading'\r\n  await props.cb(...props.params)\r\n  state.value = 'init' \r\n}\r\n\r\nconst clickEvent = () => {\r\n  state.value = 'confirm'\r\n  \r\n  if(props.question !== '') { dialog.value.show() }\r\n}\r\n</script>\r\n\r\n<template>\r\n  <div class=\"confirm-icon | f-center\">\r\n    <button\r\n        v-if=\"state === 'init' || (state === 'confirm' && question !== '')\"\r\n        type=\"button\"\r\n        class=\"button-confirm | link-default pointer\"\r\n        data-confirm\r\n        @click=\"clickEvent\"\r\n    >\r\n      <i v-if=\"icon !== '' && text === ''\" :class=\"icon\"></i>\r\n      <span \r\n        v-if=\"text !== '' && icon === ''\"\r\n        class=\"pointer underline-hover\"\r\n      >\r\n        {{ text }}\r\n      </span>\r\n    </button>\r\n    <div v-if=\"state === 'confirm' && question === ''\" class=\"f-center g-5\">\r\n      <button\r\n          type=\"button\"\r\n          class=\"confirm-icon_button | pointer\"\r\n          data-valid\r\n          @click=\"runCallBack\"\r\n      >\r\n        <i class=\"confirm-icon_icon | success fa-solid fa-check\"></i>\r\n      </button>\r\n      <button\r\n          type=\"button\"\r\n          data-cancel\r\n          class=\"confirm-icon_button | pointer\"\r\n          @click=\"state = 'init'\"\r\n      >\r\n        <i class=\"confirm-icon_icon | danger fa-solid fa-xmark\"></i>\r\n      </button>\r\n    </div>\r\n    <div v-if=\"state === 'loading'\" class=\"row-center\">\r\n      <span class=\"loader-spin\"></span>\r\n    </div>\r\n    <DialogComponent\r\n      v-if=\"question !== ''\"\r\n      ref=\"dialog\"\r\n      :closeBg=\"false\"\r\n      :closeCross=\"false\"\r\n    >\r\n      <p class=\"mb-25\">\r\n        {{ question }}\r\n      </p>\r\n      <div class=\"d-flex j-center g-25\">\r\n        <button\r\n          type=\"button\"\r\n          class=\"btn btn-success pointer\"\r\n          data-valide\r\n          @click=\"runCallBack\"\r\n        >\r\n          <i class=\"fa-solid fa-check mr-5\"></i>\r\n          {{ t('confirm_button.valide') }}\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          data-cancel\r\n          class=\"btn btn-danger pointer\"\r\n          @click=\"dialog.close()\"\r\n        >\r\n          <i class=\"fa-solid fa-xmark mr-5\"></i>\r\n          {{ t('confirm_button.cancel') }}\r\n        </button>\r\n      </div>\r\n    </DialogComponent>\r\n  </div>\r\n</template>\r\n\r\n<style lang=\"scss\">\r\n.confirm-icon {\r\n  height: 25px;\r\n\r\n  .button-confirm {\r\n    i { color: var(--primary); }\r\n\r\n    &:hover, &:focus {\r\n      i { color: var(--primary-300); }\r\n    }\r\n\r\n    &:focus {\r\n      outline: 1px solid var(--primary-300);\r\n      border-radius: 5px;\r\n    }\r\n  }\r\n\r\n  &_icon {\r\n    font-size: 1.4rem;\r\n    transition: color linear 200ms;  \r\n\r\n    &.success:hover { color: var(--success); }\r\n    &.danger:hover { color: var(--danger); }\r\n  }\r\n}\r\n</style>\r\n","<script setup>\r\n  import IconConfirm from '../../components/ConfirmIconComponent.vue';\r\n  import CodeHtml from '@brugmann/vuemann/src/components/codeHtml/CodeHtmlComponent.vue'\r\n\r\n  const DELAY_MS = 1000;\r\n  const iconConfirmCallback = async () => {\r\n    await new Promise((resolve) => setTimeout(resolve, DELAY_MS));\r\n  }\r\n</script>\r\n\r\n<template>\r\n  <h1 class=\"h1\"> Component Icone de confirmation </h1>\r\n  <p>\r\n    Ce component permet d'avoir une confirmation lorsque l'on clique sur un icon.\r\n  </p>\r\n  <h2 class=\"h2\">Propriétés</h2>\r\n  <table class=\"t-default\">\r\n    <thead>\r\n      <tr>\r\n        <th>Nom</th>\r\n        <th>Type</th>\r\n        <th>Required</th>\r\n        <th>Default</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td>icon</td>\r\n        <td>String</td>\r\n        <td>-</td>\r\n        <td>''</td>\r\n        <td>\r\n          Classes de l'icon. Ce n'est pas obligé d'être une classe Font Awesome.<br />          \r\n          Les classes fournies seront appliquées à une balise <code>&lt;i&gt;</code>.\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td>text</td>\r\n        <td>String</td>\r\n        <td>-</td>\r\n        <td>''</td>\r\n        <td>Texte à afficher sur le bouton de confirmation.</td>\r\n      </tr>\r\n      <tr>\r\n        <td>cb</td>\r\n        <td>Function</td>\r\n        <td>oui</td>\r\n        <td>-</td>\r\n        <td>Fonction à appeler lors du clic sur la confirmation.</td>\r\n      </tr>\r\n      <tr>\r\n        <td>params</td>\r\n        <td>Array</td>\r\n        <td>-</td>\r\n        <td>[]</td>\r\n        <td>Paramètres à passer à la fonction de callback.</td>\r\n      </tr>\r\n      <tr>\r\n        <td>question</td>\r\n        <td>String</td>\r\n        <td>-</td>\r\n        <td>''</td>\r\n        <td>Question à afficher dans un dialog. Si fournie, ouvre un dialog de confirmation au lieu d'afficher directement les boutons.</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n  <p>\r\n    <i class=\"fa-solid fa-triangle-exclamation color-danger mr-5\"></i>\r\n    vous devez obligatoirement définir un texte ou une icone.\r\n    <i class=\"fa-solid fa-triangle-exclamation color-danger ml-5\"></i>\r\n  </p>\r\n  <h2 class=\"h2\">Comportement</h2>\r\n  <p>\r\n    Le composant a deux modes de fonctionnement selon la prop <code>question</code> :\r\n  </p>\r\n  <ul class=\"list ml-25 mb-15\">\r\n    <li>\r\n      <strong>Sans question</strong> : Affiche directement les boutons de confirmation/annulation après le clic initial\r\n    </li>\r\n    <li>\r\n      <strong>Avec question</strong> : Ouvre un dialog de confirmation contenant la question et les boutons\r\n    </li>\r\n  </ul>\r\n  <h2 class=\"h2\">Exemples</h2>\r\n  <h3 class=\"h3\">Sans question (boutons directs)</h3>\r\n  <div class=\"f-column g-10 a-start mb-25\">\r\n    <p>Avec une icône :</p>\r\n    <IconConfirm \r\n      icon=\"fa-solid fa-trash\" \r\n      :cb=\"iconConfirmCallback\" \r\n    />\r\n    <p>Avec un texte :</p>\r\n    <IconConfirm \r\n      text=\"Supprimer\" \r\n      :cb=\"iconConfirmCallback\" \r\n    />\r\n  </div>\r\n  <h3 class=\"h3\">Avec question (dialog)</h3>\r\n  <div class=\"f-column g-10 a-start\">\r\n    <p>Avec une icône et dialog :</p>\r\n    <IconConfirm \r\n      icon=\"fa-solid fa-trash\" \r\n      question=\"Êtes-vous sûr de vouloir supprimer cet élément ?\"\r\n      :cb=\"iconConfirmCallback\" \r\n    />\r\n    <p>Avec un texte et dialog :</p>\r\n    <IconConfirm \r\n      text=\"Supprimer définitivement\" \r\n      question=\"Cette action est irréversible. Continuer ?\"\r\n      :cb=\"iconConfirmCallback\" \r\n    />\r\n  </div>\r\n  <h2 class=\"h2\">Code</h2>\r\n  <h3 class=\"h3\">Sans question</h3>\r\n  <CodeHtml>\r\n    <IconConfirm \r\n      icon=\"fa-solid fa-trash\" \r\n      :cb=\"iconConfirmCallback\" \r\n      v-pre\r\n    />\r\n  </CodeHtml>\r\n  <h3 class=\"h3\">Avec question</h3>\r\n  <CodeHtml>\r\n    <IconConfirm \r\n      icon=\"fa-solid fa-trash\" \r\n      question=\"Êtes-vous sûr de vouloir supprimer cet élément ?\"\r\n      :cb=\"iconConfirmCallback\" \r\n      v-pre\r\n    />\r\n  </CodeHtml>\r\n  <h2 class=\"h2\">Tests</h2>\r\n  <p>\r\n    Lors de vos tests, des data attributes sont ajoutées sur les boutons pour pouvoir cibler les boutons facilement.\r\n  </p>\r\n  <ul class=\"list ml-25\">\r\n    <li>\r\n      <code>data-confirm</code> : Bouton initial qui déclenche la confirmation.\r\n    </li>\r\n    <li>\r\n      <code>data-valide</code> : Bouton de validation (soit dans les boutons directs soit dans le dialog).\r\n    </li>\r\n    <li>\r\n      <code>data-cancel</code> : Bouton d'annulation (soit dans les boutons directs soit dans le dialog).\r\n    </li>\r\n  </ul>\r\n  <p>\r\n    <strong>Note :</strong> Selon la présence de la prop <code>question</code>, les boutons <code>data-valide</code> et <code>data-cancel</code> seront soit affichés directement soit dans un dialog.\r\n  </p>\r\n</template>\r\n"],"names":["props","__props","onMounted","flash","dialog","ref","state","runCallBack","clickEvent","_openBlock","_createElementBlock","_hoisted_1","_hoisted_2","_toDisplayString","_hoisted_3","_createElementVNode","_hoisted_4","_cache","_createBlock","DialogComponent","_hoisted_5","_hoisted_6","_createTextVNode","_unref","t","$event","DELAY_MS","iconConfirmCallback","resolve","_createVNode","IconConfirm","CodeHtml"],"mappings":"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"}