import{_ as l}from"./CodeHtmlComponent-DrC0t-WB.js";import{c as t,l as s,b as n,w as p,F as r,o as i,a}from"./index-CFtw_ocM.js";const c={__name:"FormsCssPage",setup(u){return(o,e)=>(i(),t(r,null,[e[3]||(e[3]=s('<h1 class="h1">Formulaire</h1><p> Vuemann intègre un ensemble de class pour pouvoir structurer et rendre responsive vos formulaire. </p><h2 class="h2">form-row</h2><p> Cette class va répartir de manière équivalente tous les enfants à l&#39;intérieur de l’élément. Les enfants auront seront séparé de 25px et il y aura un margin bottom de 20px. </p><p> Sûr les écran de moins de 768px, les enfants seront en flex-direction column. </p><p> Combiné avec la class half, l’élément ne prendra que la moitié de l&#39;espace disponible </p><h3 class="h3">Avec deux inputs</h3><div class="form-row"><input name="input-exemple" class="input"><input name="input-2-exemple" class="input"></div><h3 class="h3">Avec un input et la class half</h3><div class="form-row half"><input name="half-input-exemple" class="input"></div>',10)),n(l,null,{default:p(()=>[...e[0]||(e[0]=[a("div",{class:"form-row"},[a("input",{name:"input-exemple"}),a("input",{name:"input-2-exemple"})],-1),a("div",{class:"form-row half"},[a("input",{name:"half-input-exemple"})],-1)])]),_:1}),e[4]||(e[4]=s('<h2 class="h2">form-input et form-label</h2><p> La class <span class="badge-code">.form-input</span> s&#39;applique directement à l&#39;élément <span class="badge-code">&lt;input&gt;</span> pour activer le label flottant via <span class="badge-code">:focus</span> et <span class="badge-code">:not(:placeholder-shown)</span>. </p><p> Utilisez un conteneur avec <span class="badge-code">.p-relative</span>, placez le <span class="badge-code">&lt;label.form-label&gt;</span> juste après l’input et définissez <span class="badge-code">placeholder=&quot; &quot;</span> (espace) pour permettre l’état <span class="badge-code">:placeholder-shown</span>. </p><p> La class <span class="badge-code">.form-label</span> supporte <span class="badge-code">.required</span> pour afficher une astérisque indiquant un champ obligatoire. </p><div class="f-equal g-25"><div><h3 class="h3 mb-10">Avec une erreur</h3><div class="p-relative mb-25"><input id="input-exemple" name="input-exemple" class="form-input input" placeholder=" "><label for="input-exemple" class="form-label">Label d&#39;exemple</label><p class="form-error">Exemple d&#39;erreur</p></div></div><div><h3 class="h3 mb-10">Input required</h3><div class="p-relative"><input id="input-exemple" name="input-exemple" class="form-input input" placeholder=" "><label for="input-exemple" class="form-label required">Label d&#39;exemple</label></div></div></div>',5)),n(l,null,{default:p(()=>[...e[1]||(e[1]=[a("div",{class:"p-relative"},[a("input",{id:"input-exemple",name:"input-exemple",class:"form-input input",placeholder:" "}),a("label",{for:"input-exemple",class:"form-label required"},"Label d'exemple"),a("p",{class:"form-error"},"Exemple d'erreur")],-1)])]),_:1}),e[5]||(e[5]=s('<h2 class="h2">form-group</h2><p> Permet de lier plusieurs éléments entre eux (input, select ou bouton). Le premier élément aura les coins gauche arrondie tandis que le dernier élément aura les coins de droite arrondie. </p><div class="f-center"><div class="w-25"><div class="form-group"><input name="input-exemple" class="input"><button class="btn btn-primary">button</button></div></div></div>',3)),n(l,null,{default:p(()=>[...e[2]||(e[2]=[a("div",{class:"form-group"},[a("input",{name:"input-exemple",class:"input"}),a("button",{class:"btn btn-primary"},"button")],-1)])]),_:1})],64))}};export{c as default};
