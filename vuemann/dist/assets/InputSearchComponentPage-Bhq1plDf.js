import{_ as p}from"./CodeHtmlComponent-DrC0t-WB.js";import{_ as m}from"./InputSearchComponent-CAzxQHbS.js";import{g,c as n,l as v,a as e,b as r,i as l,d as f,w as o,F as b,o as d,m as y}from"./index-CFtw_ocM.js";const S={class:"services-list | f-column g-5 my-5"},q={":label":"t('request-create-form-chir-component.search-intervention-label')",name:"reason",ref:"inputSearchIntervention",":modelValue":"searchIntervention",":cb":"interventionSearch",":displayError":"false",noResult:"request-create-form-chir-component.search-intervention-no-result"},w={__name:"InputSearchComponentPage",setup(I){const i=["chat","chien","lapin","vache","cheval","poney","cochon","renard"],s=g([]),u=c=>{const t=i.filter(a=>a.startsWith(c));return s.value=t,s.value};return(c,t)=>(d(),n(b,null,[t[3]||(t[3]=v('<h1 class="h1">Input Search Component</h1><p> Ce component permet d&#39;exécuter une fonction de recherche à chaque frappe de clavier. </p><h2 class="h2">Propriétés</h2><table class="t-default mb-15 w-100"><thead><tr><th>Nom</th><th>Type</th><th>Required</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td>name</td><td>String</td><td>oui</td><td>-</td><td>Nom et id de l&#39;input</td></tr><tr><td>placeholder</td><td>String</td><td>-</td><td>null</td><td>Placeholder de l&#39;input.</td></tr><tr><td>cb</td><td>Function</td><td>oui</td><td>-</td><td>Fonction de recherche a exécuter</td></tr><tr><td>pattern</td><td>Regexp</td><td>-</td><td>null</td><td> Permet de ne pas activer la fonction de recherche si la touche pressée ne correspond à la regexp. </td></tr><tr><td>displayError</td><td>Boolean</td><td>-</td><td>true</td><td>Afficher ou non les erreurs de validation.</td></tr><tr><td>noResult</td><td>String</td><td>-</td><td>null</td><td>Message à afficher lorsqu&#39;aucun résultat n&#39;est trouvé dans le dropdown.</td></tr></tbody></table><h2 class="h2">Méthodes</h2><h3 class="h3">runCallBack</h3><p>Permet d&#39;exécuter le callback fourni au component.</p><h3 class="h3">toggleDropdown</h3><p>Permet d&#39;ouvrir / fermer le dropdown. Si aucun état n&#39;est passé en paramètre, la fonction va inverser l&#39;état du dropdown.</p><table class="t-default"><thead><tr><th>Nom</th><th>Type</th><th>Required</th><th>Description</th></tr></thead><tbody><tr><td>state</td><td>Boolean</td><th>-</th><td>True pour afficher et False pour le masquer</td></tr></tbody></table><h3 class="h3">setItems</h3><p>Permet de modifier la valeur d&#39;items.</p><table class="t-default"><thead><tr><th>Nom</th><th>Type</th><th>Required</th><th>Description</th></tr></thead><tbody><tr><td>value</td><td>Mix</td><th>oui</th><td>Valeur que prendre la variable items.</td></tr></tbody></table><h3 class="h3">setSearch</h3><p>Permet de modifier la valeur de la recherche.</p><table class="t-default"><thead><tr><th>Nom</th><th>Type</th><th>Required</th><th>Description</th></tr></thead><tbody><tr><td>value</td><td>Mix</td><th>oui</th><td>Valeur que prendre la variable search.</td></tr></tbody></table><h3 class="h3">focus</h3><p>Permet de focus l&#39;input du component.</p><h2 class="h2">Slot Template</h2><p> Le component expose un slot par défaut qui permet d&#39;accéder aux résultats de recherche via la variable <span class="badge-code">items</span>. </p><table class="t-default"><thead><tr><th>Variable</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>items</td><td>Array</td><td>Tableau des résultats retournés par la fonction de recherche</td></tr></tbody></table><p><strong>Note :</strong> Vous pouvez renommer la variable <span class="badge-code">items</span> lors de l&#39;utilisation du slot : <span class="badge-code">v-slot:default=&quot;{ items : maVariable }&quot;</span></p><h2 class="h2">Exemples</h2><h3 class="h3">Input search classique</h3>',24)),e("p",null,"Recherche possible : "+l(i)),r(m,{name:"search",cb:u,label:"Recherche"}),e("p",null,"Éléments trouvés : "+l(s.value),1),t[4]||(t[4]=e("h3",{class:"h3"},"Input search avec Dropdown",-1)),t[5]||(t[5]=e("p",null," Vous avez la possibilité d'afficher les résultats dans un dropdown. Pour cela votre fonction de recherche doit retourner les résultats trouvés. Ces résultats seront automatiquement accessibles via le template slot. ",-1)),t[6]||(t[6]=e("p",null,[e("strong",null,"Important :"),f(" La fonction de recherche doit retourner un tableau de résultats. Si aucun résultat n'est trouvé, retournez un tableau vide "),e("span",{class:"badge-code"},"[]"),f(". ")],-1)),r(m,{name:"search_dropdown",cb:u,label:"Recherche"},{default:o(({items:a})=>[e("ul",S,[(d(!0),n(b,null,y(a,h=>(d(),n("li",{key:h,class:"px-15"},l(h),1))),128))])]),_:1}),t[7]||(t[7]=e("h3",{class:"h3"},"Exemple avec API et gestion d'erreurs",-1)),t[8]||(t[8]=e("p",null," Voici un exemple plus complet avec une recherche via API, gestion des erreurs et affichage du nombre de résultats : ",-1)),r(p,null,{default:o(()=>[t[1]||(t[1]=e("scriptBalise",null," const interventionSearch = async () => { const result = await OperaController.interventionSearch({ search: searchIntervention.value, speciality_id: hospitalizationDatas.value.speciality.id }) if(result.status !== STATUS.SUCCESS) { return [] } return result.interventions } ",-1)),e("template",null,[e("InputSearch",q,[...t[0]||(t[0]=[e("template",{"v-slotdefault":"{ items : interventions  }"},[e("p",{"data-total":"",class:"result-total | ml-10 fw-700 color-primary-300"}," {{ t(interventions.length > 1 ? 'request-create-form-chir-component.search-interventions-total' : 'request-create-form-chir-component.search-intervention-result', { total: interventions.length }) }} "),e("ul",{class:"interventions-results | f-column g-5 my-5"},[e("li",{"v-for":"intervention in interventions",":key":"intervention",class:"pointer bg-primary-100-hover px-10","v-onclick":"selectIntervention(intervention)"},[e("div",{class:"praticien-item"}," {{ intervention.name }} ")])])],-1)])],512)])]),_:1}),t[9]||(t[9]=e("h2",{class:"h2"},"Code",-1)),r(p,{class:"my-15"},{default:o(()=>[...t[2]||(t[2]=[e("scriptBalise",null,' import InputSearch from "@brugmann/vuemann/src/services/form/views/inputs/InputSearchComponent.vue"; ',-1),e("template",null,[e("InputSearch",{name:"search",":cb":"callback"})],-1)])]),_:1}),t[10]||(t[10]=v('<h3 class="h3">Personnalisation</h3><p> Vous pouvez personnaliser la variable items fourni par le component de la façon suivante <span class="badge-code">v-slot:default=&quot;{ items : animals }&quot;</span></p><h3 class="h3">Bonnes pratiques</h3><ul><li><strong>Fonction de recherche :</strong> Toujours retourner un tableau, même vide <span class="badge-code">[]</span> en cas d&#39;erreur ou d&#39;absence de résultats </li><li><strong>Gestion d&#39;erreurs :</strong> Vérifier le statut de la réponse API avant de retourner les données </li><li><strong>Performance :</strong> Implémenter un debounce dans votre fonction de recherche pour éviter trop d&#39;appels API </li><li><strong>Accessibilité :</strong> Utiliser des clés uniques pour les éléments de la liste (propriété <span class="badge-code">:key</span>) </li><li><strong>UX :</strong> Afficher le nombre de résultats trouvés et un message quand aucun résultat n&#39;est disponible </li></ul>',4))],64))}};export{w as default};
