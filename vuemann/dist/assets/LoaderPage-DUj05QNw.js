import{_ as o}from"./CodeHtmlComponent-DrC0t-WB.js";import{c as i,l as n,a as e,b as d,w as a,B as s,F as c,o as p,d as u}from"./index-CFtw_ocM.js";const m={class:"d-flex j-start a-center g-15"},h=1e3,k={__name:"LoaderPage",setup(f){const r=async()=>{await new Promise(l=>setTimeout(l,h))};return(l,t)=>(p(),i(c,null,[t[3]||(t[3]=n('<h1 class="h1"> Loader </h1><p class="my-10"> Ce component permet d&#39;afficher un loader le temps qu&#39;une action qui prend du temps se déroute. </p><h2 class="h2">Propriétés</h2><table class="t-default"><thead><tr><th>Nom</th><th>Type</th><th>Required</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td>type</td><td>String</td><td>-</td><td>bars</td><td> Permet de préciser le type de loader que l&#39;on veut. <br> Possibilité: bars, icon </td></tr><tr><td class="pl-5">cb</td><td>Function</td><td>Si click est absent</td><td>-</td><td class="py-5"> Fonction à appeler lorsque l&#39;on appel la méthode runCallBack. </td></tr><tr><td class="pl-5">click</td><td>Function</td><td>Si cb est absent</td><td>-</td><td class="py-5"> Fonction à appeler lors du clic sur la confirmation. </td></tr><tr><td>params</td><td>Array</td><td>-</td><td>[]</td><td> Paramètres à passer à la fonction de callback. </td></tr><tr><td>params</td><td>Array</td><td>-</td><td>[]</td><td> Paramètres à passer à la fonction de callback. </td></tr><tr><td>infinite</td><td>Boolean</td><td>-</td><td>false</td><td> Si true, laissera afficher le loader même si l&#39;action est terminé. Pratique pour les rechargements de page ou redirection. </td></tr><tr><td>infinite</td><td>Boolean</td><td>-</td><td>false</td><td> Si true, laissera afficher le loader même si l&#39;action est terminé. Pratique pour les rechargements de page ou redirection. </td></tr><tr><td>buttonClasses</td><td>String</td><td>-</td><td> type bars : btn btn-primary <br> type icon : null </td><td> Classes du bouton. </td></tr><tr><td>buttonType</td><td>String</td><td>-</td><td>button</td><td> Type du bouton . </td></tr></tbody></table><h3 class="h3">Méthodes</h3><h4 class="h4"><i class="fa-solid fa-diamond mr-5"></i>setLoad</h4><p> Permet d&#39;afficher ou cacher le loader. </p><table class="t-default"><thead><tr><th>Nom</th><th>Type</th><th>Required</th><th>Description</th></tr></thead><tbody><tr><td>state</td><td>Boolean</td><th>Required</th><td> True pour afficher et False pour le masquer </td></tr></tbody></table><h4 class="h4"><i class="fa-solid fa-diamond mr-5"></i>runCallBack</h4><p> Permet d&#39;éxécuter la fonction passé en paramètre. </p><h2 class="h2">Exemple</h2>',11)),e("div",m,[d(s,{click:r},{default:a(()=>[...t[0]||(t[0]=[u(" Afficher le loader ",-1)])]),_:1}),d(s,{click:r,type:"icon"},{default:a(()=>[...t[1]||(t[1]=[e("i",{class:"fa-solid fa-face-smile color-primary color-primary-300-hover"},null,-1)])]),_:1})]),t[4]||(t[4]=e("h2",{class:"h2"},"Code",-1)),d(o,null,{default:a(()=>[...t[2]||(t[2]=[e("scriptBalise",null,' import Loader from "@brugmann/vuemann/src/components/LoaderComponent.vue"; ',-1),e("template",null,[e("Loader",{":click":"loaderCallback"}," Afficher le loader "),e("Loader",{":click":"loaderCallback",type:"icon"},[e("i",{class:"fa-solid fa-face-smile color-primary color-primary-300-hover"})])],-1)])]),_:1})],64))}};export{k as default};
