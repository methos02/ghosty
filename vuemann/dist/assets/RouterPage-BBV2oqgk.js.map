{"version":3,"file":"RouterPage-BBV2oqgk.js","sources":["../../src/views/servicesPage/RouterPage.vue"],"sourcesContent":["<template>\r\n  <h1 class=\"h1 color-primary\">Service Router</h1>\r\n  <p>Ce service permet de gérer les routes de l'application</p>\r\n  <h2 class=\"h2\">Installation</h2>\r\n  <ul class=\"list ml-25 f-column g-5\">\r\n    <li>Importer <span class=\"badge-code\">routerService</span> dans l'objet services situé dans le fichier main.js.</li>\r\n    <li>Importer <span class=\"badge-code\">routerPlugin</span> dans l'array plugins_synchrone dans le fichier main.js.</li>\r\n  </ul>\r\n  <h3 class=\"h3\">Dépendances</h3>\r\n  <p>\r\n    Ce service utilise le package externe <a href=\"https://router.vuejs.org/guide/\" class=\"underline link-underline\" target=\"_blank\">vue-router</a>. \r\n    En plus de ce package, ce service est dépedants des services :\r\n  </p>\r\n  <ul class=\"list ml-25\">\r\n    <li>auth - methodes routeAuthCheck et getAccessToken</li>\r\n    <li>utils - methode apiStatus</li>\r\n  </ul>\r\n  <h3 class=\"h3\">Configuration</h3>\r\n  <p>\r\n    Comme expliqué dans la documentation de vue-router, les routes sont gérées par un objet de route. Vous pouvez préciser \r\n    plusieurs options dans la clé <span class=\"badge-object\">meta</span>. Voici le lien vers la documentations des\r\n    <router-link :to=\"{name: 'config'}\" class=\"underline link-underline\">fichiers de configuration</router-link>.\r\n  </p>\r\n  <h4 class=\"h4\">Métas possibles</h4>\r\n  <table class=\"t-default\">\r\n    <thead>\r\n      <tr>\r\n        <th>Nom</th>\r\n        <th>Type</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td>auth</td>\r\n        <td>Bool</td>\r\n        <td>\r\n          Si cette méta est renseignée, l'utilisateur doit être connecté pour accéder à cette route.\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n  <h2 class=\"h2\">Fonctions accessibles depuis le gestionnaire de service</h2> \r\n  <!-- addRoute -->\r\n  <h3 class=\"h3\"><i class=\"fa-solid fa-diamond mr-5\"></i>addRoute</h3>\r\n  <p>Permet d'ajouter une route au router.</p>\r\n  <h4 class=\"h4\">Paramètres</h4>  \r\n  <table class=\"t-default\">\r\n    <thead>\r\n      <tr>\r\n        <th>Nom</th>\r\n        <th>Type</th>\r\n        <th>Required</th>\r\n        <th>Default</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td>route</td>\r\n        <td>Object</td>\r\n        <td>oui</td>\r\n        <td>-</td>\r\n        <td>\r\n          Route représenter sous forme d'objet à ajouter au routeur.\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n  <h4 class=\"h4\">Utilisation</h4>  \r\n  <div class=\"div-code\">\r\n    serviceM.service('routeur:addRoute', {<br />    &emsp;path: \"/\",<br />    &emsp;name: \"home\",<br />    &emsp;component: Home,<br />    })\r\n  </div>\r\n  <p>\r\n    <i class=\"fa-solid fa-triangle-exclamation color-danger mr-5\"></i>\r\n    Votre objet dois au minimum posséder les clés <span class=\"badge-code\">path</span> \r\n    et <span class=\"badge-code\">component</span> pour être prise en compte par le router.\r\n    <i class=\"fa-solid fa-triangle-exclamation color-danger ml-5\"></i>\r\n  </p>\r\n  <!-- push -->\r\n  <h3 class=\"h3\"><i class=\"fa-solid fa-diamond mr-5\"></i>push</h3>\r\n  <p>Permet de rediriger l'utilisateur vers une autre route via son url.</p>\r\n  <h4 class=\"h4\">Paramètres</h4>  \r\n  <table class=\"t-default\">\r\n    <thead>\r\n      <tr>\r\n        <th>Nom</th>\r\n        <th>Type</th>\r\n        <th>Required</th>\r\n        <th>Default</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td>route</td>\r\n        <td>String / Object</td>\r\n        <td>oui</td>\r\n        <td>-</td>\r\n        <td>\r\n          Route représenter sous forme d'objet ou d'url.\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n  <h4 class=\"h4\">Utilisation</h4>  \r\n  <div class=\"div-code\">\r\n    <span class=\"color-neutral-700\">//appel via ServiceManager</span><br />\r\n    import { servicesM } from '@brugmann/vuemann/src/services/services-manager.js'<br />\r\n    servicesM.service('routeur:push', 'route_url')<br /><br />\r\n    <span class=\"color-neutral-700\">//appel via servicesHelper</span><br />\r\n    import { router } from '@brugmann/vuemann/src/services/services-helper.js'<br />\r\n    router.push('route_url')\r\n  </div>\r\n  <!-- hasApiRoute -->\r\n  <h3 class=\"h3\"><i class=\"fa-solid fa-diamond mr-5\"></i>hasApiRoute</h3>\r\n  <p>Permet de savoir si une route api est définie dans le fichier de configuration <span class=\"badge-code\">routes-api-config.js</span>.</p>\r\n  <h4 class=\"h4\">Paramètres</h4>  \r\n  <table class=\"t-default\">\r\n    <thead>\r\n      <tr>\r\n        <th>Nom</th>\r\n        <th>Type</th>\r\n        <th>Required</th>\r\n        <th>Default</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td>name</td>\r\n        <td>String</td>\r\n        <td>oui</td>\r\n        <td>-</td>\r\n        <td>\r\n          Nom de la route\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n  <h4 class=\"h4\">Utilisation</h4>  \r\n  <div class=\"div-code\">\r\n    serviceM.service('routeur:hasApiRoute', 'route_name')\r\n  </div>\r\n  <!-- redirectAfterLogin -->\r\n  <h3 class=\"h3\"><i class=\"fa-solid fa-diamond mr-5\"></i>redirectAfterLogin</h3>\r\n  <p>Permet de rediriger l'utilisateur vers l'url qu'il a essayé d'atteindre après cette connecté.</p>\r\n  <h4 class=\"h4\">Utilisation</h4>  \r\n  <div class=\"div-code\">\r\n    serviceM.service('routeur:redirectAfterLogin')\r\n  </div>\r\n  <!-- currentRoute -->\r\n  <h3 class=\"h3\"><i class=\"fa-solid fa-diamond mr-5\"></i>currentRoute</h3>\r\n  <p>Permet de récupérer la route courante.</p>\r\n  <h4 class=\"h4\">Utilisation</h4>  \r\n  <div class=\"div-code\">\r\n    <span class=\"color-neutral-700\">//appel via ServiceManager</span><br />\r\n    import { servicesM } from '@brugmann/vuemann/src/services/services-manager.js'<br />\r\n    servicesM.service('routeur:currentRoute')<br /><br />\r\n    <span class=\"color-neutral-700\">//appel via servicesHelper</span><br />\r\n    import { route } from '@brugmann/vuemann/src/services/services-helper.js'<br />\r\n    route.current()\r\n  </div>\r\n  <!-- getCurrentRouteParam -->\r\n  <h3 class=\"h3\"><i class=\"fa-solid fa-diamond mr-5\"></i>getCurrentRouteParam</h3>\r\n  <p>Permet de récupérer un paramètre de la route courante.</p>\r\n  <h4 class=\"h4\">Utilisation</h4>  \r\n  <div class=\"div-code\">\r\n    <span class=\"color-neutral-700\">//appel via ServiceManager</span><br />\r\n    import { servicesM } from '@brugmann/vuemann/src/services/services-manager.js'<br />\r\n    servicesM.service('routeur:getCurrentRouteParam', 'param_name')<br /><br />\r\n    <span class=\"color-neutral-700\">//appel via servicesHelper</span><br />\r\n    import { route } from '@brugmann/vuemann/src/services/services-helper.js'<br />\r\n    route.get('param_name')\r\n  </div>\r\n  <!-- hasCurrentRouteParam -->\r\n  <h3 class=\"h3\"><i class=\"fa-solid fa-diamond mr-5\"></i>hasCurrentRouteParam</h3>\r\n  <p>Permet de vérifier si un paramètre existe dans la route courante (params ou query).</p>\r\n  <h4 class=\"h4\">Paramètres</h4>  \r\n  <table class=\"t-default\">\r\n    <thead>\r\n      <tr>\r\n        <th>Nom</th>\r\n        <th>Type</th>\r\n        <th>Required</th>\r\n        <th>Default</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td>param_name</td>\r\n        <td>String</td>\r\n        <td>oui</td>\r\n        <td>-</td>\r\n        <td>Nom du paramètre à vérifier</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n  <h4 class=\"h4\">Retour</h4>\r\n  <p>Retourne <span class=\"badge-code\">true</span> si le paramètre existe dans les params ou query de la route courante, <span class=\"badge-code\">false</span> sinon.</p>\r\n  <h4 class=\"h4\">Utilisation</h4>  \r\n  <div class=\"div-code\">\r\n    <span class=\"color-neutral-700\">//appel via ServiceManager</span><br />\r\n    import { servicesM } from '@brugmann/vuemann/src/services/services-manager.js'<br />\r\n    servicesM.service('router:hasCurrentRouteParam', 'param_name')<br /><br />\r\n    <span class=\"color-neutral-700\">//appel via servicesHelper</span><br />\r\n    import { route } from '@brugmann/vuemann/src/services/services-helper.js'<br />\r\n    route.has('param_name')\r\n  </div>\r\n  <!-- hasRoute -->\r\n  <h3 class=\"h3\"><i class=\"fa-solid fa-diamond mr-5\"></i>hasRoute</h3>\r\n  <p>Permet de vérifier si une route existe dans le router.</p>\r\n  <h4 class=\"h4\">Paramètres</h4>  \r\n  <table class=\"t-default\">\r\n    <thead>\r\n      <tr>\r\n        <th>Nom</th>\r\n        <th>Type</th>\r\n        <th>Required</th>\r\n        <th>Default</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td>routeName</td>\r\n        <td>String</td>\r\n        <td>oui</td>\r\n        <td>-</td>\r\n        <td>Nom de la route à vérifier</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n  <h4 class=\"h4\">Retour</h4>\r\n  <p>Retourne <span class=\"badge-code\">true</span> si la route existe, <span class=\"badge-code\">false</span> sinon.</p>\r\n  <h4 class=\"h4\">Utilisation</h4>  \r\n  <div class=\"div-code\">\r\n    <span class=\"color-neutral-700\">//appel via ServiceManager</span><br />\r\n    import { servicesM } from '@brugmann/vuemann/src/services/services-manager.js'<br />\r\n    servicesM.service('router:hasRoute', 'route_name')<br /><br />\r\n    <span class=\"color-neutral-700\">//appel via servicesHelper</span><br />\r\n    import { router } from '@brugmann/vuemann/src/services/services-helper.js'<br />\r\n    router.hasRoute('route_name')\r\n  </div>\r\n  <!-- getRoute -->\r\n  <h3 class=\"h3\"><i class=\"fa-solid fa-diamond mr-5\"></i>getRoute</h3>\r\n  <p>Permet de récupérer une route via son nom.</p>\r\n  <h4 class=\"h4\">Paramètres</h4>  \r\n  <table class=\"t-default\">\r\n    <thead>\r\n      <tr>\r\n        <th>Nom</th>\r\n        <th>Type</th>\r\n        <th>Required</th>\r\n        <th>Default</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td>routeName</td>\r\n        <td>String</td>\r\n        <td>oui</td>\r\n        <td>-</td>\r\n        <td>Nom de la route</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n  <h4 class=\"h4\">Utilisation</h4>  \r\n  <div class=\"div-code\">\r\n    serviceM.service('routeur:getRoute', 'route_name')\r\n  </div>\r\n  <!-- getRoutes -->\r\n  <h3 class=\"h3\"><i class=\"fa-solid fa-diamond mr-5\"></i>getRoutes</h3>\r\n  <p>Permet de récupérer toutes les routes enregistrées dans le router.</p>\r\n  <h4 class=\"h4\">Retour</h4>\r\n  <p>Retourne un <span class=\"badge-code\">Array</span> contenant toutes les routes configurées dans l'application.</p>\r\n  <h4 class=\"h4\">Utilisation</h4>  \r\n  <div class=\"div-code\">\r\n    <span class=\"color-neutral-700\">//appel via ServiceManager</span><br />\r\n    import { servicesM } from '@brugmann/vuemann/src/services/services-manager.js'<br />\r\n    const routes = servicesM.service('router:getRoutes')<br /><br />\r\n    <span class=\"color-neutral-700\">//appel via servicesHelper</span><br />\r\n    import { router } from '@brugmann/vuemann/src/services/services-helper.js'<br />\r\n    const routes = router.getRoutes()\r\n  </div>\r\n</template>\r\n"],"names":["_createElementVNode","_cache","_createVNode","_component_router_link"],"mappings":"ggCAkBEA,EAII,IAAA,KAAA,eAJD,yJAE6B,EAAA,GAAAC,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAD,EAAsC,OAAA,CAAhC,MAAM,cAAc,EAAC,OAAI,EAAA,iBAAO,8CACpE,EAAA,GAAAE,EAA4GC,EAAA,CAA9F,GAAI,CAAA,KAAA,QAAA,EAAkB,MAAM,uCAA2B,IAAyB,CAAA,GAAAF,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAA,GAAzB,4BAAyB,EAAA,0BAAc,KAC9G,EAAA"}